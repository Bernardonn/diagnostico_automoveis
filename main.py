# main.py
# Sistema Especialista para Diagn√≥stico de Falhas em Autom√≥veis
# Organizado por categorias, com m√∫ltiplos diagn√≥sticos e recomenda√ß√µes

from regras import REGRAS
from motor import aplicar_regras

def perguntar_bool(pergunta):
    """Pergunta ao usu√°rio e retorna True/False"""
    while True:
        resposta = input(pergunta + " (s/n): ").strip().lower()
        if resposta in ["s", "sim"]:
            return True
        elif resposta in ["n", "nao", "n√£o"]:
            return False
        else:
            print("Resposta inv√°lida. Digite 's' ou 'n'.")

def coletar_fatos():
    """Coleta as respostas do usu√°rio e retorna como dicion√°rio"""
    fatos = {}
    print("\nüîã Categoria: El√©trica e Partida")
    fatos["motor_gira"] = perguntar_bool("Ao girar a chave, o motor gira?")
    fatos["luzes_fraqueza"] = perguntar_bool("As luzes do carro est√£o fracas?")
    fatos["som_click"] = perguntar_bool("H√° som de 'click' ao tentar ligar?")
    fatos["bateria_carregada"] = perguntar_bool("A bateria est√° carregada?")
    fatos["queda_tensao_motor_ligado"] = perguntar_bool("H√° queda de tens√£o com o motor ligado?")

    print("\n‚õΩ Categoria: Combust√≠vel e Inje√ß√£o")
    fatos["tanque_vazio"] = perguntar_bool("O tanque de combust√≠vel est√° vazio?")
    fatos["luz_injecao"] = perguntar_bool("A luz de inje√ß√£o est√° acesa?")
    fatos["fuma√ßa_preta"] = perguntar_bool("Sai fuma√ßa preta do escapamento?")
    fatos["fa√≠sca_velas"] = perguntar_bool("H√° fa√≠sca nas velas?")

    print("\nüå° Categoria: Superaquecimento")
    fatos["temperatura_alta"] = perguntar_bool("O motor est√° superaquecendo?")
    fatos["liquido_arrefecimento_baixo"] = perguntar_bool("O n√≠vel de l√≠quido de arrefecimento est√° baixo?")

    print("\n‚öô Categoria: Mec√¢nica")
    fatos["ruido_metalico"] = perguntar_bool("H√° ru√≠do met√°lico alto vindo do motor?")

    print("\nüõë Categoria: Freios e Dire√ß√£o")
    fatos["freios_falhando"] = perguntar_bool("Os freios est√£o falhando?")
    fatos["direcao_dura"] = perguntar_bool("A dire√ß√£o est√° dura?")

    return fatos

def exibir_resultados(resultados):
    """Exibe diagn√≥sticos encontrados"""
    print("\n=== üîç RESULTADOS DO DIAGN√ìSTICO ===")
    if resultados:
        for r in resultados:
            print(f"\n‚ö† Problema: {r['conclusao']}")
            print(f"üìã Baseado em: {', '.join(r['baseado_em'])}")
            print(f"üõ† Recomenda√ß√£o: {r['recomendacao']}")
            print(f"üî¥ Gravidade: {r['gravidade']}")
    else:
        print("‚úÖ Nenhuma falha identificada com base nas respostas.")

def main():
    print("="*60)
    print("   SISTEMA ESPECIALISTA - DIAGN√ìSTICO DE FALHAS AUTOMOTIVAS   ")
    print("="*60)
    print("Responda as perguntas com 's' para sim ou 'n' para n√£o.\n")

    fatos = coletar_fatos()
    resultados = aplicar_regras(fatos, REGRAS)
    exibir_resultados(resultados)

    # Perguntar se o usu√°rio quer rodar novamente
    if perguntar_bool("\nDeseja realizar outro diagn√≥stico?"):
        main()

if __name__ == "__main__":
    main()
